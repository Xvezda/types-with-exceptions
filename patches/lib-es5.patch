diff -ruN .cache/lib-es5/index.d.ts types/lib-es5/index.d.ts
--- .cache/lib-es5/index.d.ts	2025-06-10 00:25:23.428845923 +0000
+++ types/lib-es5/index.d.ts	2025-06-10 00:25:22.887843952 +0000
@@ -29,6 +29,7 @@
 /**
  * Evaluates JavaScript code and executes it.
  * @param x A String value that contains valid JavaScript code.
+ * @throws {SyntaxError} If the code is not valid JavaScript.
  */
 declare function eval(x: string): any;
 
@@ -62,24 +63,32 @@
 /**
  * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).
  * @param encodedURI A value representing an encoded URI.
+ * @throws {URIError} Thrown when the URI contains invalid escape sequences
+ * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURI
  */
 declare function decodeURI(encodedURI: string): string;
 
 /**
  * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).
  * @param encodedURIComponent A value representing an encoded URI component.
+ * @throws {URIError} Thrown when the URI component contains invalid escape sequences
+ * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent
  */
 declare function decodeURIComponent(encodedURIComponent: string): string;
 
 /**
  * Encodes a text string as a valid Uniform Resource Identifier (URI)
  * @param uri A value representing an unencoded URI.
+ * @throws {URIError} Thrown when the URI contains unescapable characters
+ * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI
  */
 declare function encodeURI(uri: string): string;
 
 /**
  * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).
  * @param uriComponent A value representing an unencoded URI component.
+ * @throws {URIError} Thrown when the URI component contains unescapable characters
+ * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
  */
 declare function encodeURIComponent(uriComponent: string | number | boolean): string;
 
@@ -191,6 +200,8 @@
      * Creates an object that has the specified prototype, and that optionally contains specified properties.
      * @param o Object to use as a prototype. May be null
      * @param properties JavaScript object that contains one or more property descriptors.
+     * @throws {TypeError} Thrown when properties parameter is not null and not an object, or when property descriptors are invalid
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create
      */
     create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;
 
@@ -199,6 +210,8 @@
      * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.
      * @param p The property name.
      * @param attributes Descriptor for the property. It can be for a data property or an accessor property.
+     * @throws {TypeError} Thrown when the object is not extensible or property cannot be configured
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty
      */
     defineProperty<T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): T;
 
@@ -206,6 +219,8 @@
      * Adds one or more properties to an object, and/or modifies attributes of existing properties.
      * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.
      * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.
+     * @throws {TypeError} Thrown when the object is not extensible or properties cannot be configured
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties
      */
     defineProperties<T>(o: T, properties: PropertyDescriptorMap & ThisType<any>): T;
 
@@ -310,8 +325,16 @@
     /**
      * Creates a new function.
      * @param args A list of arguments the function accepts.
+     * @throws {SyntaxError} Thrown when the function body contains invalid JavaScript syntax
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function
      */
     new (...args: string[]): Function;
+    /**
+     * Creates a new function.
+     * @param args A list of arguments the function accepts.
+     * @throws {SyntaxError} Thrown when the function body contains invalid JavaScript syntax
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function
+     */
     (...args: string[]): Function;
     readonly prototype: Function;
 }
@@ -535,6 +558,12 @@
     new (value?: any): String;
     (value?: any): string;
     readonly prototype: String;
+    /**
+     * Returns a string created from the specified sequence of UTF-16 code units.
+     * @param codes A sequence of numbers that are UTF-16 code units
+     * @throws {RangeError} Thrown when any code unit is outside the valid range (0-65535) or when the resulting string would be invalid
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode
+     */
     fromCharCode(...codes: number[]): string;
 }
 
@@ -560,24 +589,32 @@
     /**
      * Returns a string representation of an object.
      * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.
+     * @throws {RangeError} Thrown when radix is not between 2 and 36 (inclusive)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString
      */
     toString(radix?: number): string;
 
     /**
      * Returns a string representing a number in fixed-point notation.
      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.
+     * @throws {RangeError} Thrown when fractionDigits is not between 0 and 20 (inclusive)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed
      */
     toFixed(fractionDigits?: number): string;
 
     /**
      * Returns a string containing a number represented in exponential notation.
      * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.
+     * @throws {RangeError} Thrown when fractionDigits is not between 0 and 20 (inclusive)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toExponential
      */
     toExponential(fractionDigits?: number): string;
 
     /**
      * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
      * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.
+     * @throws {RangeError} Thrown when precision is not between 1 and 21 (inclusive)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toPrecision
      */
     toPrecision(precision?: number): string;
 
@@ -916,7 +953,11 @@
     setUTCFullYear(year: number, month?: number, date?: number): number;
     /** Returns a date converted to a string using Universal Coordinated Time (UTC). */
     toUTCString(): string;
-    /** Returns a date as a string value in ISO format. */
+    /** 
+     * Returns a date as a string value in ISO format.
+     * @throws {RangeError} Thrown when the date is invalid (outside the representable range)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
+     */
     toISOString(): string;
     /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */
     toJSON(key?: any): string;
@@ -1023,9 +1064,35 @@
 }
 
 interface RegExpConstructor {
+    /**
+     * Creates a new RegExp object.
+     * @param pattern The text of the regular expression or another RegExp object
+     * @throws {SyntaxError} Thrown when the pattern contains invalid regular expression syntax
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp
+     */
     new (pattern: RegExp | string): RegExp;
+    /**
+     * Creates a new RegExp object.
+     * @param pattern The text of the regular expression
+     * @param flags Regular expression flags (g, i, m, etc.)
+     * @throws {SyntaxError} Thrown when the pattern contains invalid regular expression syntax or flags are invalid
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp
+     */
     new (pattern: string, flags?: string): RegExp;
+    /**
+     * Creates a new RegExp object.
+     * @param pattern The text of the regular expression or another RegExp object
+     * @throws {SyntaxError} Thrown when the pattern contains invalid regular expression syntax
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp
+     */
     (pattern: RegExp | string): RegExp;
+    /**
+     * Creates a new RegExp object.
+     * @param pattern The text of the regular expression
+     * @param flags Regular expression flags (g, i, m, etc.)
+     * @throws {SyntaxError} Thrown when the pattern contains invalid regular expression syntax or flags are invalid
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp
+     */
     (pattern: string, flags?: string): RegExp;
     readonly "prototype": RegExp;
 
@@ -1154,10 +1221,20 @@
 
 interface JSON {
     /**
+     * Converts a JavaScript Object Notation (JSON) string literal into an object.
+     * For string literals, syntax errors are typically caught at development time.
+     * @param text A valid JSON string literal.
+     * @param reviver A function that transforms the results. This function is called for each member of the object.
+     * If a member contains nested objects, the nested objects are transformed before the parent object is.
+     */
+    parse<T extends string>(text: string extends T ? never : T, reviver?: (this: any, key: string, value: any) => any): any;
+    /**
      * Converts a JavaScript Object Notation (JSON) string into an object.
      * @param text A valid JSON string.
      * @param reviver A function that transforms the results. This function is called for each member of the object.
      * If a member contains nested objects, the nested objects are transformed before the parent object is.
+     * @throws {SyntaxError} Thrown when the input text is not valid JSON
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse
      */
     parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;
     /**
@@ -1165,6 +1242,8 @@
      * @param value A JavaScript value, usually an object or array, to be converted.
      * @param replacer A function that transforms the results.
      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
+     * @throws {TypeError} Thrown when the value contains circular references or BigInt values
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify
      */
     stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;
     /**
@@ -1172,6 +1251,8 @@
      * @param value A JavaScript value, usually an object or array, to be converted.
      * @param replacer An array of strings and numbers that acts as an approved list for selecting the object properties that will be stringified.
      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
+     * @throws {TypeError} Thrown when the value contains circular references or BigInt values
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify
      */
     stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;
 }
@@ -1504,12 +1585,56 @@
 }
 
 interface ArrayConstructor {
-    new (arrayLength?: number): any[];
-    new <T>(arrayLength: number): T[];
+    /**
+     * Creates a new Array instance.
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
+    new (): any[];
+    /**
+     * Creates a new Array instance with the given elements.
+     * @param items Elements to include in the array
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
     new <T>(...items: T[]): T[];
-    (arrayLength?: number): any[];
-    <T>(arrayLength: number): T[];
+    /**
+     * Creates a new Array instance with the specified length.
+     * @param arrayLength The length of the array
+     * @throws {RangeError} Thrown when arrayLength is not a valid array length (negative or not an integer)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
+    new (arrayLength: number): any[];
+    /**
+     * Creates a new Array instance with the specified length.
+     * @param arrayLength The length of the array
+     * @throws {RangeError} Thrown when arrayLength is not a valid array length (negative or not an integer)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
+    new <T>(arrayLength: number): T[];
+    /**
+     * Creates a new Array instance.
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
+    (): any[];
+    /**
+     * Creates a new Array instance with the given elements.
+     * @param items Elements to include in the array
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
     <T>(...items: T[]): T[];
+    /**
+     * Creates a new Array instance with the specified length.
+     * @param arrayLength The length of the array
+     * @throws {RangeError} Thrown when arrayLength is not a valid array length (negative or not an integer)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
+    (arrayLength: number): any[];
+    /**
+     * Creates a new Array instance with the specified length.
+     * @param arrayLength The length of the array
+     * @throws {RangeError} Thrown when arrayLength is not a valid array length (negative or not an integer)
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Array
+     */
+    <T>(arrayLength: number): T[];
     isArray(arg: any): arg is any[];
     readonly prototype: any[];
 }
@@ -1714,6 +1839,12 @@
 
 interface ArrayBufferConstructor {
     readonly prototype: ArrayBuffer;
+    /**
+     * Creates a new ArrayBuffer with the specified byte length.
+     * @param byteLength The length in bytes of the buffer
+     * @throws {RangeError} Thrown when byteLength is negative or exceeds the maximum size
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/ArrayBuffer
+     */
     new (byteLength: number): ArrayBuffer;
     isView(arg: any): arg is ArrayBufferView;
 }
@@ -1745,6 +1876,8 @@
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
      * @param littleEndian If false or undefined, a big-endian value should be read.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat32
      */
     getFloat32(byteOffset: number, littleEndian?: boolean): number;
 
@@ -1753,6 +1886,8 @@
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
      * @param littleEndian If false or undefined, a big-endian value should be read.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat64
      */
     getFloat64(byteOffset: number, littleEndian?: boolean): number;
 
@@ -1760,6 +1895,8 @@
      * Gets the Int8 value at the specified byte offset from the start of the view. There is
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt8
      */
     getInt8(byteOffset: number): number;
 
@@ -1768,6 +1905,8 @@
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
      * @param littleEndian If false or undefined, a big-endian value should be read.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt16
      */
     getInt16(byteOffset: number, littleEndian?: boolean): number;
     /**
@@ -1775,6 +1914,8 @@
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
      * @param littleEndian If false or undefined, a big-endian value should be read.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt32
      */
     getInt32(byteOffset: number, littleEndian?: boolean): number;
 
@@ -1782,6 +1923,8 @@
      * Gets the Uint8 value at the specified byte offset from the start of the view. There is
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint8
      */
     getUint8(byteOffset: number): number;
 
@@ -1790,6 +1933,8 @@
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
      * @param littleEndian If false or undefined, a big-endian value should be read.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint16
      */
     getUint16(byteOffset: number, littleEndian?: boolean): number;
 
@@ -1798,6 +1943,8 @@
      * no alignment constraint; multi-byte values may be fetched from any offset.
      * @param byteOffset The place in the buffer at which the value should be retrieved.
      * @param littleEndian If false or undefined, a big-endian value should be read.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint32
      */
     getUint32(byteOffset: number, littleEndian?: boolean): number;
 
@@ -1806,6 +1953,8 @@
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
      * @param littleEndian If false or undefined, a big-endian value should be written.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat32
      */
     setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;
 
@@ -1814,6 +1963,8 @@
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
      * @param littleEndian If false or undefined, a big-endian value should be written.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat64
      */
     setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;
 
@@ -1821,6 +1972,8 @@
      * Stores an Int8 value at the specified byte offset from the start of the view.
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt8
      */
     setInt8(byteOffset: number, value: number): void;
 
@@ -1829,6 +1982,8 @@
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
      * @param littleEndian If false or undefined, a big-endian value should be written.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt16
      */
     setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;
 
@@ -1837,6 +1992,8 @@
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
      * @param littleEndian If false or undefined, a big-endian value should be written.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt32
      */
     setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;
 
@@ -1844,6 +2001,8 @@
      * Stores an Uint8 value at the specified byte offset from the start of the view.
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint8
      */
     setUint8(byteOffset: number, value: number): void;
 
@@ -1852,6 +2011,8 @@
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
      * @param littleEndian If false or undefined, a big-endian value should be written.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint16
      */
     setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;
 
@@ -1860,11 +2021,21 @@
      * @param byteOffset The place in the buffer at which the value should be set.
      * @param value The value to set.
      * @param littleEndian If false or undefined, a big-endian value should be written.
+     * @throws {RangeError} Thrown when byteOffset is out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint32
      */
     setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;
 }
 interface DataViewConstructor {
     readonly prototype: DataView<ArrayBufferLike>;
+    /**
+     * Creates a new DataView for the specified ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param byteLength The number of bytes in the view
+     * @throws {RangeError} Thrown when byteOffset or byteLength are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/DataView
+     */
     new <TArrayBuffer extends ArrayBufferLike & { BYTES_PER_ELEMENT?: never; }>(buffer: TArrayBuffer, byteOffset?: number, byteLength?: number): DataView<TArrayBuffer>;
 }
 declare var DataView: DataViewConstructor;
@@ -2118,9 +2289,31 @@
 }
 interface Int8ArrayConstructor {
     readonly prototype: Int8Array<ArrayBufferLike>;
+    /**
+     * Creates a new Int8Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array/Int8Array
+     */
     new (length: number): Int8Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Int8Array<ArrayBuffer>;
+    /**
+     * Creates a new Int8Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array/Int8Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Int8Array<TArrayBuffer>;
+    /**
+     * Creates a new Int8Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array/Int8Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int8Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Int8Array<ArrayBuffer>;
 
@@ -2400,9 +2593,31 @@
 }
 interface Uint8ArrayConstructor {
     readonly prototype: Uint8Array<ArrayBufferLike>;
+    /**
+     * Creates a new Uint8Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array/Uint8Array
+     */
     new (length: number): Uint8Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Uint8Array<ArrayBuffer>;
+    /**
+     * Creates a new Uint8Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array/Uint8Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint8Array<TArrayBuffer>;
+    /**
+     * Creates a new Uint8Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array/Uint8Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint8Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Uint8Array<ArrayBuffer>;
 
@@ -2682,9 +2897,31 @@
 }
 interface Uint8ClampedArrayConstructor {
     readonly prototype: Uint8ClampedArray<ArrayBufferLike>;
+    /**
+     * Creates a new Uint8ClampedArray with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray/Uint8ClampedArray
+     */
     new (length: number): Uint8ClampedArray<ArrayBuffer>;
     new (array: ArrayLike<number>): Uint8ClampedArray<ArrayBuffer>;
+    /**
+     * Creates a new Uint8ClampedArray view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray/Uint8ClampedArray
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint8ClampedArray<TArrayBuffer>;
+    /**
+     * Creates a new Uint8ClampedArray view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray/Uint8ClampedArray
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint8ClampedArray<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Uint8ClampedArray<ArrayBuffer>;
 
@@ -2963,9 +3200,31 @@
 }
 interface Int16ArrayConstructor {
     readonly prototype: Int16Array<ArrayBufferLike>;
+    /**
+     * Creates a new Int16Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array/Int16Array
+     */
     new (length: number): Int16Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Int16Array<ArrayBuffer>;
+    /**
+     * Creates a new Int16Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array/Int16Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Int16Array<TArrayBuffer>;
+    /**
+     * Creates a new Int16Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array/Int16Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int16Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Int16Array<ArrayBuffer>;
 
@@ -3245,9 +3504,31 @@
 }
 interface Uint16ArrayConstructor {
     readonly prototype: Uint16Array<ArrayBufferLike>;
+    /**
+     * Creates a new Uint16Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array/Uint16Array
+     */
     new (length: number): Uint16Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Uint16Array<ArrayBuffer>;
+    /**
+     * Creates a new Uint16Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array/Uint16Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint16Array<TArrayBuffer>;
+    /**
+     * Creates a new Uint16Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array/Uint16Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint16Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Uint16Array<ArrayBuffer>;
 
@@ -3526,9 +3807,31 @@
 }
 interface Int32ArrayConstructor {
     readonly prototype: Int32Array<ArrayBufferLike>;
+    /**
+     * Creates a new Int32Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array/Int32Array
+     */
     new (length: number): Int32Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Int32Array<ArrayBuffer>;
+    /**
+     * Creates a new Int32Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array/Int32Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Int32Array<TArrayBuffer>;
+    /**
+     * Creates a new Int32Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array/Int32Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int32Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Int32Array<ArrayBuffer>;
 
@@ -3807,9 +4110,31 @@
 }
 interface Uint32ArrayConstructor {
     readonly prototype: Uint32Array<ArrayBufferLike>;
+    /**
+     * Creates a new Uint32Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array/Uint32Array
+     */
     new (length: number): Uint32Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Uint32Array<ArrayBuffer>;
+    /**
+     * Creates a new Uint32Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array/Uint32Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Uint32Array<TArrayBuffer>;
+    /**
+     * Creates a new Uint32Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array/Uint32Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint32Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Uint32Array<ArrayBuffer>;
 
@@ -4089,9 +4414,31 @@
 }
 interface Float32ArrayConstructor {
     readonly prototype: Float32Array<ArrayBufferLike>;
+    /**
+     * Creates a new Float32Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array/Float32Array
+     */
     new (length: number): Float32Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Float32Array<ArrayBuffer>;
+    /**
+     * Creates a new Float32Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array/Float32Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Float32Array<TArrayBuffer>;
+    /**
+     * Creates a new Float32Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array/Float32Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float32Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Float32Array<ArrayBuffer>;
 
@@ -4371,9 +4718,31 @@
 }
 interface Float64ArrayConstructor {
     readonly prototype: Float64Array<ArrayBufferLike>;
+    /**
+     * Creates a new Float64Array with the specified length.
+     * @param length The length of the array
+     * @throws {RangeError} Thrown when length is negative or too large
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array/Float64Array
+     */
     new (length: number): Float64Array<ArrayBuffer>;
     new (array: ArrayLike<number>): Float64Array<ArrayBuffer>;
+    /**
+     * Creates a new Float64Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array/Float64Array
+     */
     new <TArrayBuffer extends ArrayBufferLike = ArrayBuffer>(buffer: TArrayBuffer, byteOffset?: number, length?: number): Float64Array<TArrayBuffer>;
+    /**
+     * Creates a new Float64Array view of an ArrayBuffer.
+     * @param buffer The ArrayBuffer to view
+     * @param byteOffset The byte offset to start the view at
+     * @param length The number of elements in the view
+     * @throws {RangeError} Thrown when byteOffset or length are out of bounds
+     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array/Float64Array
+     */
     new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float64Array<ArrayBuffer>;
     new (array: ArrayLike<number> | ArrayBuffer): Float64Array<ArrayBuffer>;
 
@@ -4435,7 +4804,21 @@
     }
 
     interface CollatorConstructor {
+        /**
+         * Creates a new Collator object.
+         * @param locales A locale string or array of locale strings
+         * @param options An object with collation options
+         * @throws {RangeError} Thrown when the locales or options contain invalid values
+         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator/Collator
+         */
         new (locales?: string | string[], options?: CollatorOptions): Collator;
+        /**
+         * Creates a new Collator object.
+         * @param locales A locale string or array of locale strings
+         * @param options An object with collation options
+         * @throws {RangeError} Thrown when the locales or options contain invalid values
+         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator/Collator
+         */
         (locales?: string | string[], options?: CollatorOptions): Collator;
         supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];
     }
@@ -4496,7 +4879,21 @@
     }
 
     interface NumberFormatConstructor {
+        /**
+         * Creates a new NumberFormat object.
+         * @param locales A locale string or array of locale strings
+         * @param options An object with number formatting options
+         * @throws {RangeError} Thrown when the locales or options contain invalid values
+         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat
+         */
         new (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;
+        /**
+         * Creates a new NumberFormat object.
+         * @param locales A locale string or array of locale strings
+         * @param options An object with number formatting options
+         * @throws {RangeError} Thrown when the locales or options contain invalid values
+         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat
+         */
         (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;
         supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];
         readonly prototype: NumberFormat;
@@ -4543,7 +4940,15 @@
     }
 
     interface DateTimeFormatConstructor {
+        /**
+         * @throws {RangeError} Thrown when the locales or options arguments are not valid.
+         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat
+         */
         new (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;
+        /**
+         * @throws {RangeError} Thrown when the locales or options arguments are not valid.
+         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat
+         */
         (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;
         supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];
         readonly prototype: DateTimeFormat;
diff -ruN .cache/lib-es5/package.json types/lib-es5/package.json
--- .cache/lib-es5/package.json	2025-06-10 00:25:23.434845944 +0000
+++ types/lib-es5/package.json	2025-06-10 00:25:22.887843952 +0000
@@ -1,7 +1,7 @@
 {
-    "name": "typescript",
+    "name": "@types-with-exceptions/lib-es5",
     "author": "Microsoft Corp.",
-    "homepage": "https://www.typescriptlang.org/",
+    "homepage": "https://github.com/Xvezda/types-with-exceptions/tree/main/types/lib-es5",
     "version": "5.8.3",
     "license": "Apache-2.0",
     "description": "TypeScript is a language for application scale JavaScript development",
@@ -13,37 +13,24 @@
         "javascript"
     ],
     "bugs": {
-        "url": "https://github.com/microsoft/TypeScript/issues"
+        "url": "https://github.com/Xvezda/types-with-exceptions/issues"
     },
     "repository": {
         "type": "git",
-        "url": "https://github.com/microsoft/TypeScript.git"
-    },
-    "main": "./lib/typescript.js",
-    "typings": "./lib/typescript.d.ts",
-    "bin": {
-        "tsc": "./bin/tsc",
-        "tsserver": "./bin/tsserver"
+        "url": "https://github.com/Xvezda/types-with-exceptions.git",
+        "directory": "types/lib-es5"
     },
+    "main": "./index.d.ts",
+    "typings": "./index.d.ts",
     "engines": {
         "node": ">=14.17"
     },
     "files": [
-        "bin",
-        "lib",
-        "!lib/enu",
         "LICENSE.txt",
         "README.md",
-        "SECURITY.md",
-        "ThirdPartyNoticeText.txt",
-        "!**/.gitattributes"
+        "index.d.ts"
     ],
     "devDependencies": {
-        "@dprint/formatter": "^0.4.1",
-        "@dprint/typescript": "0.93.3",
-        "@esfx/canceltoken": "^1.0.0",
-        "@eslint/js": "^9.17.0",
-        "@octokit/rest": "^21.0.2",
         "@types/chai": "^4.3.20",
         "@types/diff": "^5.2.3",
         "@types/minimist": "^1.2.5",
@@ -51,70 +38,6 @@
         "@types/ms": "^0.7.34",
         "@types/node": "latest",
         "@types/source-map-support": "^0.5.10",
-        "@types/which": "^3.0.4",
-        "@typescript-eslint/rule-tester": "^8.18.1",
-        "@typescript-eslint/type-utils": "^8.18.1",
-        "@typescript-eslint/utils": "^8.18.1",
-        "azure-devops-node-api": "^14.1.0",
-        "c8": "^10.1.3",
-        "chai": "^4.5.0",
-        "chalk": "^4.1.2",
-        "chokidar": "^3.6.0",
-        "diff": "^5.2.0",
-        "dprint": "^0.47.6",
-        "esbuild": "^0.24.0",
-        "eslint": "^9.17.0",
-        "eslint-formatter-autolinkable-stylish": "^1.4.0",
-        "eslint-plugin-regexp": "^2.7.0",
-        "fast-xml-parser": "^4.5.1",
-        "glob": "^10.4.5",
-        "globals": "^15.13.0",
-        "hereby": "^1.10.0",
-        "jsonc-parser": "^3.3.1",
-        "knip": "^5.41.0",
-        "minimist": "^1.2.8",
-        "mocha": "^10.8.2",
-        "mocha-fivemat-progress-reporter": "^0.1.0",
-        "monocart-coverage-reports": "^2.11.4",
-        "ms": "^2.1.3",
-        "playwright": "^1.49.1",
-        "source-map-support": "^0.5.21",
-        "tslib": "^2.8.1",
-        "typescript": "^5.7.2",
-        "typescript-eslint": "^8.18.1",
-        "which": "^3.0.1"
-    },
-    "overrides": {
-        "typescript@*": "$typescript"
-    },
-    "scripts": {
-        "test": "hereby runtests-parallel --light=false",
-        "test:eslint-rules": "hereby run-eslint-rules-tests",
-        "build": "npm run build:compiler && npm run build:tests",
-        "build:compiler": "hereby local",
-        "build:tests": "hereby tests",
-        "build:tests:notypecheck": "hereby tests --no-typecheck",
-        "clean": "hereby clean",
-        "gulp": "hereby",
-        "lint": "hereby lint",
-        "knip": "hereby knip",
-        "format": "dprint fmt",
-        "setup-hooks": "node scripts/link-hooks.mjs"
-    },
-    "browser": {
-        "fs": false,
-        "os": false,
-        "path": false,
-        "crypto": false,
-        "buffer": false,
-        "source-map-support": false,
-        "inspector": false,
-        "perf_hooks": false
-    },
-    "packageManager": "npm@8.19.4",
-    "volta": {
-        "node": "20.1.0",
-        "npm": "8.19.4"
-    },
-    "gitHead": "68cead182cc24afdc3f1ce7c8ff5853aba14b65a"
+        "@types/which": "^3.0.4"
+    }
 }
